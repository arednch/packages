name: Build packages

on:
  release:
    types: [created]
  # pull_request:
  #   branches: [main]
  #   types: [opened]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
        - info
        - warning
        - debug

jobs:
  build-deb:
    name: Build deb ${{ matrix.package }} ${{ matrix.arch.name }}
    runs-on: ${{ matrix.arch.image }}
    permissions:
      contents: write
    strategy:
      matrix:
        arch:
          - image: ubuntu-24.04
            name: amd64
          # - image: ubuntu-24.04-arm
          #   name: arm64
          # - image: ubuntu-24.04-arm
          #   name: arm
        package:
          - phonebook
    env:
      GOOS: "linux"
      GOARCH: "${{ matrix.arch.name }}"
      GOARM: "7"
      CGO_ENABLED: "0"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout source
        id: checkout_source
        uses: actions/checkout@v4
        with:
          repository: arednch/phonebook
          path: phonebook-repo

      - name: Get version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION='main'
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          cache: false
          go-version: ">=1.24.1"

      - name: Build Go binary
        run: |
          cd phonebook-repo
          go build -v -ldflags="-s -w -X 'main.CommitSHA=${{ steps.checkout_source.outputs.commit }}' -X 'main.Version=${{ steps.get_version.outputs.version }}'" -o phonebook .
          pwd
          ls -al

      - name: Build .deb
        run: |
          ls -al
          cp -fr phonebook-repo/phonebook phonebook-deb/usr/bin/
          dpkg-deb --build --root-owner-group phonebook-deb
          cp phonebook-deb/*.deb phonebook-${{ matrix.arch.name }}.deb

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.package }}-${{ matrix.arch.name }}-package
          compression-level: 0 # no compression
          path: |
            *.deb

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ github.event.release.tag_name }}
          tag_name: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
          prerelease: ${{ github.event.release.prerelease }}
          draft: ${{ github.event.release.draft }}
          files: |
            *.deb

  # build-aredn:
  #   name: Build ${{ matrix.package }} ${{ matrix.arch }} ${{ matrix.openwrt }}
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   strategy:
  #     matrix:
  #       openwrt:
  #         - main          # APK packages going forward
  #         - openwrt-24.10 # IPK packages built using an older version
  #       arch:
  #         - x86_64
  #         - mips_24kc
  #         - arm_cortex-a7_neon-vfpv4
  #       package:
  #         - phonebook

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Build
  #       uses: openwrt/gh-action-sdk@main
  #       env:
  #         ARCH: ${{ matrix.arch }}-${{ matrix.openwrt }}
  #         FEEDNAME: aredn
  #         EXTRA_FEEDS: "src-git|upx|https://github.com/kuoruan/openwrt-upx.git"
  #         PACKAGES: ${{ matrix.package }}
  #         V: sc

  #     - name: Move created IPK packages to project dir with tag
  #       if: ${{ matrix.openwrt != 'main' && github.event.release.tag_name != '' }}
  #       run: |
  #         cp bin/packages/${{ matrix.arch }}/aredn/${{ matrix.package }}*.ipk ./${{ matrix.package }}-${{ github.event.release.tag_name }}-${{ matrix.arch }}.ipk || true

  #     - name: Move created IPK packages to project dir without tag
  #       if: ${{ matrix.openwrt != 'main' && github.event.release.tag_name == '' }}
  #       run: |
  #         cp bin/packages/${{ matrix.arch }}/aredn/${{ matrix.package }}*.ipk ./${{ matrix.package }}-${{ matrix.arch }}.ipk || true

  #     - name: Move created APK packages to project dir with tag
  #       if: ${{ matrix.openwrt == 'main' && github.event.release.tag_name != '' }}
  #       run: |
  #         cp bin/packages/${{ matrix.arch }}/aredn/${{ matrix.package }}*.apk ./${{ matrix.package }}-${{ github.event.release.tag_name }}-${{ matrix.arch }}.apk || true

  #     - name: Move created APK packages to project dir without tag
  #       if: ${{ matrix.openwrt == 'main' && github.event.release.tag_name == '' }}
  #       run: |
  #         cp bin/packages/${{ matrix.arch }}/aredn/${{ matrix.package }}*.apk ./${{ matrix.package }}-${{ matrix.arch }}.apk || true

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ matrix.package }}-${{ matrix.arch }}-${{ matrix.openwrt }}-package
  #         compression-level: 0 # no compression
  #         path: |
  #           *.ipk
  #           *.apk

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         name: ${{ github.event.release.tag_name }}
  #         tag_name: ${{ github.event.release.tag_name }}
  #         body: ${{ github.event.release.body }}
  #         prerelease: ${{ github.event.release.prerelease }}
  #         draft: ${{ github.event.release.draft }}
  #         files: |
  #           *.ipk
  #           *.apk
